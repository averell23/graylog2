server {

  listen <%= (@secure)? 443 : 80 %>;
  client_max_body_size 4G;
  server_name <%= "#{@server_name} #{@server_aliases}" %>;
  keepalive_timeout 5;

  gzip  on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_min_length 1100;
  gzip_buffers     4 8k;
  gzip_proxied any;
  gzip_types text/plain text/xml application/xml application/xml+rss
             text/css text/javascript application/javascript application/json;

  gzip_static on;

  gzip_proxied        expired no-cache no-store private auth;
  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;

  proxy_set_header Host $host;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Real-IP  $remote_addr;
  proxy_connect_timeout   60;
  proxy_send_timeout      60;
  proxy_read_timeout      60;

  set $root_folder '<%= @document_root %>';
  root $root_folder;
  try_files $uri/index.html $uri.html $uri @app;

  set $maintenance_file '/system/maintenance.html';

  location ~ ^/images/ {
    rewrite ^/images/(.*)$ /assets/$1 break;
  }

  location ~ ^/([0-9]+\.html|blank\.gif|favicon(-[^.]+)?\.ico|google[0-9a-f]+\.html|recommend_project\.png|video[0-9]+_[a-z][a-z]\.html)$ {
    expires max;
    add_header Cache-Control public;

    add_header ETag "";
    break;
  }

  location ~ ^/(paperclip|uploads|pictures|pdf_documents|assets|sitemaps)/ {
    expires max;
    add_header Cache-Control public;

    add_header ETag "";
    break;
  }

  location / {

    <% if @protect_site %>
    auth_basic            "Enter a valid user";
    auth_basic_user_file  <%= @htpasswd_file %>;
    <% end %>
    # Only use next upstream on errors, not timeouts
    proxy_next_upstream error;
    if (-e $root_folder$maintenance_file ) {
        # if ($remote_addr != "XXX.XXX.XXX.XXX") {
        #     return 503;
        # }
        return 503;
    }

    if (!-f $request_filename) {
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_redirect off;
      proxy_pass http://unicorn_server;
      break;
    }

  }

  error_log  <%= @error_log_file %>;
  access_log  <%= @access_log_file %>;


  # Rails error pages
  error_page 500 502 504 /500.html;
  location = /500.html {
  }

  # Rails error pages
  error_page 400 /400.html;
  location = /400.html {
  }

  location /system {
  }
  # Define 503 error/maintenance page
  error_page 503 @maintenance;
  location @maintenance {
      if ($uri ~ ^/+assets/) { break; }
      rewrite ^(.*)$ $maintenance_file break;
  }

  location = /favicon.ico{
    error_log /dev/null warn;
  }


}
